name: "Terraform CI Development"

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest.
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Export Terraform TFVARS file
        run: |
          echo "$TERRAFORM_VARIABLES" >> terraform.tfvars
        shell: bash
        env:
          TERRAFORM_VARIABLES: ${{ secrets.DEV_TERRAFORM_VARIABLES }}

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init 


      # Checks that all Terraform configuration files adhere to a canonical format
      #- name: Terraform Format
      #  run: terraform fmt

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -lock=false -var-file="terraform.tfvars"
        
        # On push to main, build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        run: terraform apply -lock=false -var-file="terraform.tfvars" -auto-approve 